#Python：面向对象的语言	Object
#对象实际上就是一个容器，就是内存中专门用来存储指定数据的一块区域
#有可变对象和不可变对象
#对象的结构
#	id：对象标识，由解析器生成的，在Cpython中，id就是对象的内存地址
#		标识对象的唯一性
#		可以通过id()函数来查看对象的id
#	type：对象类型，决定了对象有哪些功能
#		Python是强类型语言，对象一旦创建不能修改
#	value：对象数据
#		可变对象的数据可修改，不可变对象的数据不可修改


##变量和对象的关系
#	对象并没有直接存储到变量中，在Python中变量更像是对象的别名
#	变量中存储的对象的id
#	变量中的对象，只有在重新赋值时才会发生改变
#	变量和变量之间是相互独立的，修改变量不会影响到其他变量


a = 123
print(id(a))
print(type(a))

a=10
b=a
print(id(a))
print(id(b))
#此时b的引用还是10的引用地址，因为没有重新赋值
a=30
print(id(a))
print(id(b))


a = [1,2,3]
print(a, id(a))
# 这里是修改对象的数据
a[0] = 10
print(a, id(a))

# 这里是修改变量，给变量重新赋值
a = [4,5,6]
print(a, id(a))


a = [10,20,30]
b = a
print('a',a,id(a))
print('b',b,id(b))

# 当修改对象的数据时，修改的值也会体现在其他引用该对象的变量上
b[0] = 100
print('a',a,id(a))
print('b',b,id(b))



# == ！= is is not
# == 和！=是比较对象的值是否相等
# is 和 is not 是比较对象的id是否相等也即比较是否为同一个对象

a = [1,2,3]
b = [1,2,3]
print('a=',a,id(a))
print('b=',b,id(b))

# True a和b的值相等
print(a == b)
# False a和b不是同一个对象
print(a is b)


